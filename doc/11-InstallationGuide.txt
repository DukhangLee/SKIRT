/**

\page InstallationGuide Installation Guide

\section InstallIntro Introduction

This chapter describes how to install SKIRT on your computer.

\subsection InstallReq System requirements

SKIRT has been developed and tested on Mac OS X 10.9 (Mavericks) and on the Linux distribution Ubuntu 14.04 (64-bit).
However SKIRT should be able to run on any Unix system. To perform all but the smallest simulations,
it must be compiled as a 64-bit application and run on a 64-bit system.
At this time SKIRT does not properly compile or run on Microsoft Windows systems, however should the need arise this
could probably be supported with only a small effort.

SKIRT is written in C++11 and is based on the Qt 5.2 development environment. There are no other external dependencies.
The source code is hosted on GitHub. Thus you will need to install a \em git client, a recent
C++ compiler and the appropriate Qt libraries. The documentation is generated from the source code through Doxygen.
You don't need to install Doxygen and the related tools unless you are a substantial contributor to the code.

\subsection InstallTypes Types of installation

Subsequent sections provide detailed installation instructions for three scenarios:
 - use and/or develop on Mac OS X: see \ref InstallDevMac
 - use and/or develop on Ubuntu Desktop: see \ref InstallDevUbu
 - use (with no or minor modifications) on a Unix server: see \ref InstallSource

The procedure for other scenarios, e.g. another desktop Unix flavor, can probably (hopefully) be inferred
by picking and choosing from these instructions.



\section InstallDevMac Installing SKIRT on Mac OS X

This section explains how to install and configure the complete development environment for SKIRT on
Mac OS X 10.9 (Mavericks) including the capability to generate HTML and PDF documentation for SKIRT.
Mac OS X is written on top of a Unix system (\em not Linux) customized by Apple. This means that most of the standard
Unix tools are available, but things are sufficiently different to warrant a separate treatment.

Some of the installation steps described below require you to enter Unix shell commands in a Terminal window.
In most cases, you will need to be or become super-user (for example using \c sudo \c bash) for the commands
to run successfully.

\subsection InstallMacComp Installing the compiler

SKIRT is written in C++11, the C++ flavor that was standardized in 2011, extending the language with new features.
Hence you need to install a recent C++ compiler.
On Mac OS X this is accomplished by installing the Xcode development environment, which is
freely available from the App Store. Download and install the latest version, and then launch the Xcode application
at least once to complete installation. SKIRT was tested with Xcode 5.1 which installs the Apple C++ compiler Clang 3.4
(Apple LLVM version 5.1 based on LLVM 3.4).

\note It is important that you launch the Xcode application at least once to complete installation
of the command line tools that will be used by the Qt development environment.

\note You need to install the full Xcode application; installing the <em>Command Line Tools for Xcode</em> package
is not sufficient (and not needed).


\subsection InstallMacGit Configuring the source control client

The SKIRT source code resides in an online GitHub repository. You can access this repository from your computer
through the \c git client software, which is automatically installed by Xcode along with the C++ compiler
(see \ref InstallMacComp).

Before using the \c git client, you should configure it with your user name and email address. This is
especially important if you plan to contribute code to the SKIRT repository. Perform the following commands,
replacing the placeholders with your own name and email address:

\verbatim
git config --global user.name "John Smith"
git config --global user.email john.smith@smithsonian.org
\endverbatim

\subsection InstallMacQt Installing the Qt development environment

SKIRT is based on the Qt 5.2 development environment. In addition to run-time libraries and build tools, Qt offers
a convenient integrated code editor called Qt Creator. All of these components can be installed on Mac OS X with
a single installer.

Go to the <a href="http://qt-project.org/downloads">Qt download page</a> and download the disk image file called
\c qt-opensource-mac-x64-clang-5.2.1.dmg . Double-click the downloaded file's icon to open the disk image of the
installer, double-click the installer package icon in the window that appears, and follow the instructions in the
installer wizard for a standard install.

Use Finder or Spotlight to locate the \em Qt \em Creator application in the newly installed directory,
and drag the application icon to your dock (or add it to your preferred application launcher).

Launch the Qt Creator application and choose the "Qt Creator->Preferences..." menu item to open the preferences dialog.
Select the "Build&Run->Compilers" tab and verify that Qt automatically detected the Clang compiler installed on your
computer. If not, manually add a suitable compiler and press the "Apply" button.
Select the "Build&Run->Qt Versions" tab and verify that Qt automatically detected the Qt version you just installed
(Qt 5.2.1 if you used the installer mentioned above). If not, manually add an appropriate Qt version.
Select the "Build&Run->Kits" tab. Remove any lines listed other than "Desktop (Default)" (select each of the
lines in turn and press the "Remove" button). Select the line "Desktop (Default)" and verify and/or configure
its properties: "Compiler" should be "Clang x86 64-bit", and "Qt version" should be the version you installed
(i.e. Qt 5.2.1 if you used the installer mentioned above).
Finally press the "OK" buttun to accept the changes and close the preferences dialog.

\subsection InstallMacGet Getting the SKIRT source code

To work with SKIRT, you need to copy the source code to your local file system. First create a directory hierarchy that
will hold the SKIRT source code, binaries and run-time information. The top-level directory can have any name (for
example \c SKIRT) and can be located anywhere (for example in your home directory), but the subdirectories should be
named as indicated:

\verbatim
cd
mkdir SKIRT
cd SKIRT
mkdir debug release run git
\endverbatim

\subsubsection InstallMacGetRepos Source code repositories

The most recent stable version of the SKIRT source code is available from the
<a href="https://github.com/SKIRT/SKIRT">public SKIRT GitHub repository</a> at
<a href="https://github.com">GitHub.com</a>.
While any user can freely retrieve the code from this repository (even anonymously), only the core SKIRT team
has write access to it.

The current development version of the SKIRT source code is stored in a \em private GitHub repository hosted
on the Ghent University's web servers. You can access this repository only if you have a UGent account \em and
the core SKIRT team has specifically granted you read-only or read/write access rights to the repository.

\subsubsection InstallMacGetPublic Using the public repository

If you just want to use the stable version of SKIRT without making any code contributions, you can simply clone
the public repository as an anonymous user:

\verbatim
cd ~/SKIRT
git clone https://github.com/SKIRT/SKIRT.git git
\endverbatim

If you plan to make code contributions, you should instead create an account at
<a href="https://github.com">GitHub.com</a>,
fork the <a href="https://github.com/SKIRT/SKIRT">SKIRT repository</a> and then clone your own fork to your computer.
This allows you to push your modifications to your own fork and initiate a pull request when you want to contribute
the changes to the project. Refer to the online GitHub documentation for more information about this process.

\subsubsection InstallMacGetUGent Using the private repository

If you have a UGent account and the core SKIRT team has granted you access rights to the SKIRT repository, you need to
follow a slightly different procedure. Before cloning the source code to your computer, sign in to
<a href="https://github.ugent.be">the UGent GitHub</a> using your regular universal UGent password.
Navigate to "Edit your profile" and then "SSH keys", and follow the instructions to generate (if necessary) and add
your public SSH key to the list.

Once your SSH key has been added, you can clone the SKIRT source code from the private repository to your computer:

\verbatim
cd ~/SKIRT
git clone git@github.ugent.be:SKIRT/SKIRT.git git
\endverbatim

\subsubsection InstallMacGetUpdate Updating your local copy

To update your local copy of the source code after changes were made to the repository from which you cloned it, use:

\verbatim
cd ~/SKIRT/git
git pull
\endverbatim


\subsection InstallMacConf Configuring the development environment

Before proceeding, you should configure Qt Creator according to the following instructions.
Launch the Qt Creator application if necessary, and choose the "Qt Creator->Preferences..." menu item to open
the preferences panel. On the various tabs listed below, make the specified adjustments (leaving all other
settings untouched), and at the end press the OK button to confirm the changes.

  - "Text Editor -> Behavior" tab
    - Tab size: 4
    - Backspace indentation: Follow Previous Indents
    - In entire document: On
    - Default encoding: UTF-8
    - UTF-8 BOM: Always Delete

  - "Text Editor -> Display" tab
    - Display right margin at column: 120
    - Highlight current line: On

  - "Help -> Documentation" tab
    - download the SKIRT.qch compressed help file from
      <a href="http://www.skirt.ugent.be/downloads">www.skirt.ugent.be/downloads</a>
      to your local hard disk and add it to the documentation available in Qt Creator

  - "C++ -> Code Style" tab
    - press the "Import..." button, select the file <tt>~/SKIRT/git/doc/SkirtCodeStyle.xml</tt>
      and press the "Open" button

  - "C++ -> File Naming" tab
    - Header suffix: hpp
    - Lower case filenames: Off
    - License template: press the "Choose..." button, select the file <tt>~/SKIRT/git/doc/LicenseTemplate.txt</tt>
      and press the "Open" button

  - "Build & Run -> General" tab
    - Save all files before build: On
    - Open Compile Output pane when building: On
    - Clear old application output on a new run: On
    - Merge stderr and stdout: On
    - Default build directory: "../%{CurrentBuild:Name}"

\subsection InstallMacBuild Building SKIRT

To build SKIRT from within Qt Creator, you need to open the main Qt project included with the source code.
In Qt Creator, choose the menu item "File->Open File or Project...", locate the Qt project
file \c BuildSKIRT.pro inside your \c SKIRT/git directory, and press the "Open" button from within the dialog.

Qt Creator now opens a configuration pane for the BuildSKIRT project in its main window. Simply press the
"Configure Project..." button without changing any of the values, which causes Qt Creator to switch to
regular "Edit" mode. However you still need to adjust the project configuration.

Select "Projects" mode in the left margin and select the "Build & Run" tab. There should be two subtabs called
"Build" and "Run", placed under a "Desktop" header. First select the "Build" subtab. There are two build
configurations called "Debug" and "Release", which can be selected through the "Edit build configuration" popup.
For each configuration, change the "Build directory" to one of the directories you created earlier
(\c SKIRT/debug for the debug configuration, \c SKIRT/release for the release configuration).

\note IMPORTANT: leave the "Edit build configuration" popup on the release configuration.

Still in "Projects" mode, now select the "Run" subtab. In the "Run configuration" popup, select the
"SKIRTmain" item. Now change the "Working directory" to the \c SKIRT/run directory
you created earlier. Turn off the "Run in terminal" option;
this causes SKIRT's log messages to appear inside Qt Creator rather than in a separate Terminal window.

Finally go back to "Edit" mode (icon in left margin). Here you can browse, view and edit the source tree.
To compile and build the complete SKIRT code (including FitSKIRT), click the hammer icon in the left margin.

\subsection InstallMacRun Running SKIRT

To facilitate running SKIRT from the command line, you can
include SKIRT in your \c PATH by adding a line to your ~/.profile or ~/.bash_profile file. Assuming you placed
the SKIRT project in the default location as described above, you should add the following line:

\verbatim
export PATH=~/SKIRT/release/SKIRTmain:~/SKIRT/release/FitSKIRTmain:$PATH
\endverbatim

To validate your installation and build, enter the following commands in a Terminal window:

\verbatim
cd ~/SKIRT/run
skirt -h
\endverbatim

Since SKIRT doesn't recognize the -h option, it will write an error message, followed by a brief help text:

\verbatim
Welcome to SKIRT v___
* *** Error: Invalid command line arguments
!
! To create a new ski file interactively:    skirt
! To run a simulation with default options:  skirt <ski-filename>
!
!   skirt [-b] [-s <simulations>] [-t <threads>]
!         [-k] [-i <dirpath>] [-o <dirpath>]
!         [-r] {<filepath>}*
...
\endverbatim

It can be useful (e.g. when testing a new feature) to run SKIRT from within Qt creator. This is meaningful only if
you already have a .ski file. To specify the command line arguments for SKIRT (including the name of the .ski file),
select "Projects" mode in the left margin and go to the "SKIRTmain" run configuration.
Enter the command line arguments in the "Arguments" field. Go back to "Edit mode".

To run SKIRT, click the green triangular icon in the left margin.

\subsection InstallMacDoxStyle Installing the documentation streamliner

If you plan on writing or updating SKIRT code documentation, you may wish to configure DoxStyle,
a tool to assist with formatting /**-style documentation blocks in .hpp files.
DoxStyle is automatically included and built as part of the buildSKIRT project.

To configure Qt Creator so that you can easily use DoxStyle, choose the "Qt Creator->Preferences..." menu item to open
the preferences panel, and make the adjustments on the various tabs as listed below, pressing the OK button at the end.

 - "Environment -> External Tools" tab
   - Add a new category called "DoxStyle"
   - Add a new item called "Streamline Selection" to this category
   - Configure the attributes for this item as follows:
     - Description: "Streamlines the doxygen blocks in the selection"
     - Executable: path to the DoxStyle executable: ~/SKIRT/release/DoxStyle/doxstyle
     - Arguments: empty
     - Working directory: empty
     - Output: Replace Selection
     - Error output: Ignore
     - Modifies current document: off
     - Input: "%{CurrentDocument:Selection}"

 - "Environment -> Keyboard" tab
    - In the long item list, select "Tools -> External.Streamline_Selection"
    - In the "Key sequence" field, enter the shortcut combination Alt-Command-I (on Mac) or Alt-Ctrl-I (on Ubuntu)

For information on how to use DoxStyle, see \ref DevStyleFormat.

\subsection InstallMacDoxygen Installing the documentation generator

This section is only relevant if you wish to (re-)generate the SKIRT documentation.
The SKIRT documentation is generated from the source files by Doxygen. This free open source application requires
a TeX distribution to handle mathematical formulas, and it uses the Dots tool in the Graphviz graph visualization
software to generate class diagrams.

If you do not already have a recent TeX install, install the following package:
- <a href="http://www.tug.org/mactex/2012/">The MacTeX-2012 Distribution</a> (MacTeX.pkg)

In addition, install the following packages:
- <a href="http://www.stack.nl/~dimitri/doxygen/">Doxygen application and tools</a> (Doxygen-1.8.5.dmg)
- <a href="http://www.graphviz.org/Download_macos.php">Graphviz Graph Visualization Software</a> (graphviz-2.36.0.pkg)

For information on how to actually generate the documentation, see \ref DevBuildDocs.


\section InstallDevUbu Installing SKIRT on Ubuntu Desktop

This section explains how to install and configure the development environment for SKIRT on Ubuntu Desktop 14.04,
one of the most popular Linux distributions. At this time there are no
instructions for generating SKIRT documentation on Ubuntu, although this should be possible if the need arises.

Some of the installation steps described below require you to enter Unix shell commands in a Terminal window.
In most cases, you will need to be or become super-user (for example using \c sudo \c bash) for the commands
to run successfully.

\subsection InstallUbuPacks Installing development tools

SKIRT is written in C++11, the C++ flavor that was standardized in 2011, extending the language with new features.
The SKIRT source code resides in an online GitHub repository, which you can access from your computer
through the \c git client. Hence you need to install a recent C++ compiler and the \c git client.

On Ubuntu you can accomplish this easily by installing the appropriate packages using the standard package manager.
From a Terminal window, simply enter:

\verbatim
apt-get install g++
apt-get install git
\endverbatim

\subsection InstallUbuGit Configuring the source control client

Before using the \c git client, you should configure it with your user name and email address. This is
especially important if you plan to contribute code to the SKIRT repository. Perform the following commands,
replacing the placeholders with your own name and email address:

\verbatim
git config --global user.name "John Smith"
git config --global user.email john.smith@smithsonian.org
\endverbatim

\subsection InstallUbuQt Installing the Qt development environment

SKIRT is based on the Qt 5.2 development environment. In addition to run-time libraries and build tools, Qt offers
a convenient integrated code editor called Qt Creator. All of these components can be installed on Ubuntu with
a single installer.

Go to the <a href="http://qt-project.org/downloads">Qt download page</a> and download the file called
\c qt-opensource-linux-x64-5.2.1.run . Make the downloaded file executable and run it as follows:

\verbatim
chmod +rx qt-opensource-linux-x64-5.2.1.run
./qt-opensource-linux-x64-5.2.1.run
\endverbatim

Follow the instructions in the installer wizard for a standard install.
Once the installation completed, locate and launch the Qt Creator application.
Choose the "Tools->Options..." menu item to open the options dialog.

Select the "Build&Run->Compilers" tab and verify that Qt automatically detected the gcc compiler installed on your
computer. If not, manually add a suitable compiler and press the "Apply" button.
Select the "Build&Run->Qt Versions" tab and verify that Qt automatically detected the Qt version you just installed
(Qt 5.2.1 if you used the installer mentioned above). If not, manually add an appropriate Qt version.
Select the "Build&Run->Kits" tab. Remove any lines listed other than "Desktop (Default)" (select each of the
lines in turn and press the "Remove" button). Select the line "Desktop (Default)" and verify and/or configure
its properties: "Compiler" should be "gcc x86 64-bit", and "Qt version" should be the version you installed
(i.e. Qt 5.2.1 if you used the installer mentioned above).
Finally press the "OK" buttun to accept the changes and close the preferences dialog.

\subsection InstallUbuGet Getting the SKIRT source code

Proceed as described in \ref InstallMacGet.

\subsection InstallUbuConf Configuring the development environment

Proceed as described in \ref InstallMacConf, keeping in mind that on Ubuntu "Preferences" are called "Options",
and that the corresponding dialog is accessed by selecting the "Tools->Options..." menu item.

\subsection InstallUbuBuild Building SKIRT

Proceed as described in \ref InstallMacBuild.

\subsection InstallUbuRun Running SKIRT

Proceed as described in \ref InstallMacRun.

\subsection InstallUbuDoxStyle Installing the documentation streamliner

Proceed as described in \ref InstallMacDoxStyle, keeping in mind that on Ubuntu "Preferences" are called "Options",
and that the corresponding dialog is accessed by selecting the "Tools->Options..." menu item.



\section InstallSource Installing SKIRT on a Unix server

This section explains how to install SKIRT on any Unix system.
After you've followed the guidelines in this section, the SKIRT source code will reside on your computer and so you
can obviously tweak it using your preferred text editor. However if you expect to modify or extend the SKIRT code
in any but the most trivial ways, it is highly recommended to install the full-featured Qt development environment
as described in section \ref InstallDevMac or \ref InstallDevUbu rather than using the guidelines in this section.

\subsection InstallSrcPacks Installing development tools

SKIRT is written in C++11, the C++ flavor that was standardized in 2011, extending the language with new features.
The SKIRT source code resides in an online GitHub repository, which you can access from your computer
through the \c git client. Hence you need to install a recent C++ compiler and the \c git client.

Depending on the particular Unix flavor under consideration, you may accomplish this by any of the following
means:
 - use a standard package manager for your system;
 - download and run an installer that was downloaded manually;
 - ask your system manager to install the required tools.

\subsection InstallSrcGit Configuring the source control client

Before using the \c git client, you should configure it with your user name and email address. This is
especially important if you plan to contribute code to the SKIRT repository. Perform the following commands,
replacing the placeholders with your own name and email address:

\verbatim
git config --global user.name "John Smith"
git config --global user.email john.smith@smithsonian.org
\endverbatim

\subsection InstallSrcGet Getting the SKIRT source code

Proceed as described in \ref InstallMacGet.

\subsection InstallSrcQt Installing the Qt tools and libraries

SKIRT uses the Qt application framework, so the Qt libraries and build tools should be installed on your computer
before attempting to compile or build SKIRT (even if you don't use the full Qt development environment).
Go to the <a href="http://qt-project.org/downloads">Qt download page</a> and download the Qt libraries source code
version 5.2.1 intended for your system.
SKIRT has been tested with \c qt-everywhere-opensource-src-5.2.1.tar.gz on Ubuntu.

The SKIRT source code includes a shell script \c makeQt_everywhere.sh to assist with building Qt from source.
To minimize dependencies on external libraries, the provided script builds only a limited Qt subset that is sufficient
for the current version of SKIRT. You can use the script as is, but more likely you will need to modify it
to suit your needs in the following ways:
 - adjust the value of the \c -prefix option to specify the directory where the Qt libraries will be installed;
 - add a \c -platform option with a value that specifies the appropriate compiler and operating system,
   unless you know that the default will work for your environment; the value of the platform option must be
   the name of one of the subdirectories in the \c mkspecs directory inside the Qt source distribution.

\note On the servers used by the Ghent University SKIRT team, the default platform works fine so you can omit the
\c -platform option.

\note On the Ghent University High Performance Computing (HPC) system, it is highly recommended that you use
the Intel C++ compiler. To accomplish this, add the option "-platform linux-icc-64" in the \c makeQt_everywhere.sh
script, and \em before you execute the script, load the \c ictce module in addition to the \c jobs module.
You will need to (re)load this modules before (re)building SKIRT as well.

After editing the script as needed, enter the following shell commands to build Qt from source (it takes a while!):

\verbatim
cd <directory-containing-qt-source-distribution>
tar xvfz qt-everywhere-opensource-src-5.2.1.tar.gz
cd qt-everywhere-opensource-src-5.2.1
cp ~/SKIRT/git/makeQt_everywhere.sh .
chmod +rx makeQt_everywhere.sh
./makeQt_everywhere.sh
\endverbatim

\subsection InstallSrcBuild Building SKIRT

The SKIRT source code includes a shell script \c makeSKIRT.sh to assist in building SKIRT
from the source code in the git directory.
If the Qt tools and libraries were not installed in one of the default places, you will need to adjust
the path to \c qmake in the script. Also, before you use the script for the first time, you may need
to make it executable.

To build SKIRT use:

\verbatim
cd ~/SKIRT/git
chmod +rx makeSKIRT.sh
./makeSKIRT.sh
\endverbatim

\subsection InstallSrcRun Running SKIRT

Proceed as described in \ref InstallMacRun.

*/
