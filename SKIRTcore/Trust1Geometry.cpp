/*//////////////////////////////////////////////////////////////////
////       SKIRT -- an advanced radiative transfer code         ////
////       Â© Astronomical Observatory, Ghent University         ////
///////////////////////////////////////////////////////////////// */

#include <cmath>
#include "Trust1Geometry.hpp"
#include "Random.hpp"
#include "Units.hpp"

using namespace std;

//////////////////////////////////////////////////////////////////////

Trust1Geometry::Trust1Geometry()
{
}

//////////////////////////////////////////////////////////////////////

void Trust1Geometry::setupSelfBefore()
{
    GenGeometry::setupSelfBefore();

    // set property values
    double pc = Units::pc();
    _slab = Box(-5*pc, -5*pc, -5*pc, 5*pc, 5*pc, -2*pc);
    _rho = 1.0 / _slab.volume();
}

//////////////////////////////////////////////////////////////////////

double Trust1Geometry::density(Position bfr) const
{
    return _slab.contains(bfr) ? _rho : 0;
}

//////////////////////////////////////////////////////////////////////

Position Trust1Geometry::generatePosition() const
{
    return _random->position(_slab);
}

//////////////////////////////////////////////////////////////////////

double Trust1Geometry::SigmaX() const
{
    return 0;
}

//////////////////////////////////////////////////////////////////////

double Trust1Geometry::SigmaY() const
{
    return 0;
}

//////////////////////////////////////////////////////////////////////

double Trust1Geometry::SigmaZ() const
{
    return _rho * _slab.zwidth();
}

//////////////////////////////////////////////////////////////////////
